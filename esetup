#!/bin/bash

grn="\e[32m"
cyn="\e[36m"
rst="\e[0m"    # reset

announce() {
    echo -e $grn"configuring $1"$rst
}

dostep() {
  step=$1
  sdo=$2
  cmd=$3
  echo
  echo -e $grn"step $step: $cyn$cmd$rst"
  echo -e $cyn"running $cmd$rst"
  echo
  if [[ $sdo == "y" ]] ; then
    sudo $cmd
  else
    $cmd
  fi
}

prerequisites() {
  dostep 1 "y" "apt-get -y install --no-install-recommends make gcc automake autoconf"
  dostep 2 "y" "apt-get -y install --no-install-recommends g++ git curl"
  dostep 3 "y" "apt-get -y install --no-install-recommends gnupg"
  dostep 4 "y" "apt-get -y install --no-install-recommends libxml2-utils"
}

tls_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends gnutls-bin"
  dostep 2 "y" "apt-get -y install --no-install-recommends ca-certificates"
}

keychain_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends keychain"
}

ag_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends silversearcher-ag"
}

scheme_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends guile-2.0"
  dostep 2 "y" "apt-get -y install --no-install-recommends chicken-bin libchicken7 libchicken-dev"
  dostep 3 "n" "chicken-install -s apropos chicken-doc input-parse numbers"
  dostep 4 "n" "chicken-install -s sxml-transforms matchable scss filepath spiffy uri-common"
  dostep 5 "n" "chicken-install -s doctype colorize multidoc defstruct atom svnwiki-sxml"
  dostep 6 "n" "chicken-install -s rfc3339 hyde webkit"
  dostep 7 "n" "cd $(csi -p '(chicken-home)')"
  dostep 8 "n" "curl http://3e8.org/pub/chicken-doc/chicken-doc-repo.tgz | sudo tar zx"
  dostep 9 "n" "cd $HOME"
}

commonlisp_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends sbcl sbcl-doc"
  dostep 2 "y" "apt-get -y install --no-install-recommends cl-clx-sbcl cl-ppcre"
  dostep 3 "y" "apt-get -y install --no-install-recommends texinfo cl-swank"
}

clojure_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends openjdk-8-jdk openjdk-8-source"
  if [ ! -d "$HOME/bin" ]; then
    dostep 2 "n" "mkdir -p $HOME/bin"
  fi
  dostep 3 "n" "wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -O $HOME/bin/lein"
  dostep 4 "n" "chmod 755 $HOME/bin/lein"
  dostep 5 "n" "lein"
}

python_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends python2.7 ipython"
  dostep 2 "y" "apt-get -y install --no-install-recommends python-pip"
  dostep 3 "y" "pip install proselint"
}

rust_setup() {
  dostep 1 "n" "curl https://sh.rustup.rs -sSf | sh"
  dostep 2 "n" "rustup component add rust-src"
  dostep 3 "n" "cargo install rustfmt"
  dostep 4 "n" "cargo install cargo-release"
  dostep 5 "n" "cargo install racer"
  dostep 6 "n" "cargo install tokei"
  dostep 7 "n" "cargo install ripgrep"
  dostep 8 "y" "ln -s $HOME/.cargo/bin/rg /usr/local/bin/rg"
}

scala_setup() {
  dostep 1 "y" "echo \"deb https://dl.bintray.com/sbt/debian /\" | sudo tee -a /etc/apt/sources.list.d/sbt.list"
  dostep 2 "y" "apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 2EE0EA64E40A89B84B2DF73499E82A75642AC823"
  dostep 3 "y" "apt-get update"
  dostep 4 "y" "apt-get install sbt"
  dostep 5 "y" "curl -L -o /usr/local/bin/amm https://git.io/vP4Gw"
  dostep 6 "y" "chmod +x /usr/local/bin/amm"
  dostep 7 "n" "curl https://raw.githubusercontent.com/foundweekends/conscript/master/setup.sh | sh"
  dostep 8 "y" "ln -s /home/manuel/.conscript/bin/cs /usr/local/bin/cs"
  dostep 9 "n" "cs foundweekends/giter8"
  dostep 10 "y" "ln -s /home/manuel/.conscript/bin/g8 /usr/local/bin/g8"
}

latex_setup() {
  dostep 1 "n" "cd $HOME/Downloads"
  dostep 2 "n" "wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz"
  dostep 3 "n" "tar -xzf install-tl-unx.tar.gz"
  dostep 4 "n" "cd $(tar -tzf install-tl-unx.tar.gz | sed -e 'N;s/^\(.*\).*\n\1.*$/\1\n\1/;D')"
  dostep 5 "y" "./install-tl"
  dostep 6 "y" "mkdir -p /opt"
  dostep 7 "y" "ln -s /usr/local/texlive/2016/bin/* /opt/texbin"
  dostep 8 "y" "apt-get install --no-install-recommends equivs"
  dostep 9 "n" "mkdir -p /tmp/tl-equivs && cd /tmp/tl-equivs"
  dostep 10 "n" "wget http://www.tug.org/texlive/files/debian-equivs-2016-ex.txt"
  dostep 11 "n" "/bin/cp -f debian-equivs-2016-ex.txt texlive-local"
  dostep 12 "n" "equivs-build texlive-local"
  dostep 13 "y" "dpkg -i texlive-local_2016-1_all.deb"
  dostep 14 "y" "/opt/texbin/tlmgr option docfiles 1"
  if [ ! -d "$HOME/sources" ]; then
    dostep 15 "n" "mkdir -p $HOME/sources"
  fi
  dostep 16 "n" "cd $HOME/sources"
  dostep 17 "n" "wget http://download.savannah.gnu.org/releases/chktex/chktex-1.7.6.tar.gz"
  dostep 18 "n" "tar xzf chktex-1.7.6.tar.gz"
  dostep 19 "n" "rm chktex-1.7.6.tar.gz"
  dostep 20 "n" "cd chktex-1.7.6"
  dostep 21 "n" "./configure --enable-lacheck-replace && make"
  dostep 22 "y" "make install"
  dostep 23 "n" "cp /usr/local/etc/chktexrc $HOME/.chktexrc"
  dostep 24 "n" "cd $HOME"
}

pandoc_setup() {
  dostep 1 "n" "wget https://github.com/jgm/pandoc/releases/download/1.17.1/pandoc-1.17.1-2-amd64.deb"
  dostep 2 "y" "dpkg -i pandoc-1.17.1-2-amd64.deb"
  dostep 3 "n" "rm pandoc-1.17.1-2-amd64.deb"
}

pdftools_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends libpng-dev libz-dev"
  dostep 2 "y" "apt-get -y install --no-install-recommends libpoppler-glib-dev"
  dostep 3 "y" "apt-get -y install --no-install-recommends libpoppler-private-dev"
  dostep 4 "y" "apt-get -y install --no-install-recommends imagemagick"
}

flyspell_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends hunspell"
}

wordnet_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends wordnet"
}

font_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends fonts-dejavu fonts-dejavu-extra"
  dostep 2 "y" "apt-get -y install --no-install-recommends ttf-ancient-fonts"
}

cask_setup() {
  dostep 1 "n" "curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python"
}

shellcheck_setup() {
  dostep 1 "y" "apt-get -y install --no-install-recommends shellcheck"
}

sudo -v # gets user password for next sudos

cd "$HOME"
announce PREREQUISITES
prerequisites
announce TLS
tls_setup
announce KEYCHAIN
keychain_setup
announce AG
ag_setup
announce CLOJURE
clojure_setup
announce SCHEME
scheme_setup
announce COMMONLISP
commonlisp_setup
announce PYTHON
python_setup
announce RUST
rust_setup
announce SCALA
scala_setup
announce CASK
cask_setup
announce SHELLCHECK
shellcheck_setup
announce LaTeX
latex_setup
announce PANDOC
pandoc_setup
announce PDFTOOLS
pdftools_setup
announce FLYSPELL
flyspell_setup
announce WORDNET
wordnet_setup
announce FONT
font_setup

echo
echo "environment ready, now fire up Emacs!"
echo
