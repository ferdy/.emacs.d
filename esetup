#!/bin/bash

prerequisites() {
    echo "
configuring prerequisites..."
    sudo apt-get -y install --no-install-recommends make gcc automake autoconf
    sudo apt-get -y install --no-install-recommends g++ git
    echo "
... done"
}

tls_setup() {
    echo "
configuring tls..."
    sudo apt-get -y install --no-install-recommends gnutls-bin
    sudo apt-get -y install --no-install-recommends ca-certificates
    echo "
... done"
}

ag_setup() {
    echo "
configuring ag..."
    sudo apt-get -y install --no-install-recommends silversearcher-ag
    echo "
... done"
}

scheme_setup() {
    echo "
configuring Scheme..."
    sudo apt-get -y install --no-install-recommends guile-2.0
    sudo apt-get -y install --no-install-recommends chicken-bin libchicken7 libchicken-dev
    chicken-install -s apropos chicken-doc input-parse numbers
    cd `csi -p '(chicken-home)'`
    curl http://3e8.org/pub/chicken-doc/chicken-doc-repo.tgz | sudo tar zx
    cd $HOME
    echo "
... done"
}

commonlisp_setup() {
    echo "
configuring Common Lisp..."
    sudo apt-get -y install --no-install-recommends sbcl sbcl-doc
    sudo apt-get -y install --no-install-recommends cl-clx-sbcl cl-ppcre
    sudo apt-get -y install --no-install-recommends texinfo cl-swank
    echo "
... done"
}

clojure_setup() {
    echo "
configuring Clojure..."
    sudo apt-get -y install --no-install-recommends openjdk-8-jre
    echo "
getting Lein..."
    if [ ! -d "$HOME/bin" ]; then
        mkdir -p $HOME/bin
        export PATH=$PATH:$HOME/bin
    fi
    wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -O $HOME/bin/lein
    chmod 755 $HOME/bin/lein
    lein
    echo "
... done"
}

latex_setup() {
    echo "
configuring LaTeX..."
    sudo apt-get -y install --no-install-recommends texlive-latex-base
    sudo apt-get -y install --no-install-recommends texlive-latex-recommended
    sudo apt-get -y install --no-install-recommends latexmk texlive-xetex
    sudo apt-get -y install --no-install-recommends texlive-luatex luatex
    sudo apt-get -y install --no-install-recommends texlive-latex-extra
    sudo apt-get -y install --no-install-recommends texlive-fonts-recommended
    sudo apt-get -y install --no-install-recommends texlive-fonts-extra
    sudo apt-get -y install --no-install-recommends texlive-generic-recommended
    sudo apt-get -y install --no-install-recommends texlive-math-extra
    sudo apt-get -y install --no-install-recommends texlive-lang-italian
    sudo apt-get -y install --no-install-recommends texlive-lang-english
    sudo apt-get -y install --no-install-recommends cjk-latex latex-cjk-all
    sudo apt-get -y install --no-install-recommends texlive-lang-cjk
    sudo apt-get -y install --no-install-recommends texlive-chinese-lang
    sudo apt-get -y install --no-install-recommends latex-xcolor fonts-lmodern lmodern
    sudo apt-get -y install --no-install-recommends texlive-pstricks
    echo "
... done. Configuring chktex for Flycheck..."
    if [ ! -d "$HOME/sources" ]; then
        mkdir -p $HOME/sources
    fi
    cd $HOME/sources
    wget http://download.savannah.gnu.org/releases/chktex/chktex-1.7.2.tar.gz
    tar xzf chktex-1.7.2.tar.gz
    rm chktex-1.7.2.tar.gz
    cd chktex-1.7.2
    ./configure --enable-lacheck-replace && make
    sudo make install
    cp /usr/local/etc/chktexrc $HOME/.chktexrc
    echo "
... done"
    cd $HOME
}

pandoc_setup() {
    echo "
configuring Pandoc..."
    sudo apt-get -y install --no-install-recommends pandoc
    echo "
... done"
}

pdftools_setup() {
    echo "
configuring pdf-tools dependencies..."
    sudo apt-get -y install --no-install-recommends libpng-dev libz-dev
    sudo apt-get -y install --no-install-recommends libpoppler-glib-dev
    sudo apt-get -y install --no-install-recommends -t experimental libpoppler-private-dev
    sudo apt-get -y install --no-install-recommends imagemagick
    echo "
... done"
    cd $HOME
}

flyspell_setup() {
    echo "
configuring spell checker..."
    sudo apt-get -y install --no-install-recommends aspell aspell-en aspell-it
    echo "
... done"
}

synosaurus_setup() {
    echo "
configuring synosaurus..."
    sudo apt-get -y install --no-install-recommends wordnet
    echo "
... done"
}

langtool_setup() {
    echo "
configuring langtool..."
    if [ ! -x /usr/bin/unzip ]; then
        sudo apt-get -y install --no-install-recommends unzip
    fi
    cd $HOME
    wget https://languagetool.org/download/LanguageTool-3.1.zip
    unzip LanguageTool-3.1.zip
    mv LanguageTool-3.1 languagetool
    rm LanguageTool-3.1.zip
    echo "
... done"
}

font_setup() {
    echo "
configuring fonts..."
    sudo apt-get -y install --no-install-recommends fonts-dejavu fonts-dejavu-extra
    sudo apt-get -y install --no-install-recommends fonts-croscore
    sudo apt-get -y install --no-install-recommends ttf-ancient-fonts
    sudo apt-get -y install --no-install-recommends fonts-sil-gentium fonts-sil-gentiumplus
    cd $HOME
    if [ ! -d "$HOME/.fonts" ]; then
        mkdir -p $HOME/.fonts
    fi
    wget https://github.com/adobe-fonts/source-code-pro/archive/2.010R-ro/1.030R-it.tar.gz
    tar xzf 1.030R-it.tar.gz
    cp -r $HOME/source-code-pro-2.010R-ro-1.030R-it $HOME/.fonts/souce-code-pro
    rm -rf source-code-pro-2.010R-ro-1.030R-it 1.030R-it.tar.gz
    fc-cache -fv
    echo "
... done"
}

camcorder_setup() {
    echo "
configuring camcorder dependencies..."
    sudo apt-get -y install --no-install-recommends recordmydesktop
    echo "
... done"
}

bongo_setup() {
    echo "
configuring bongo dependencies..."
    sudo apt-get -y install --no-install-recommends mpg123
    echo "
... done"
}

echo "
##########################################
# esetup                                 #
# Script for creating the right          #
# environment for my Emacs configuration #
##########################################"

sudo -v # gets user password for next sudos

cd $HOME
prerequisites
tls_setup
ag_setup
clojure_setup
scheme_setup
commonlisp_setup
latex_setup
pandoc_setup
pdftools_setup
flyspell_setup
synosaurus_setup
langtool_setup
font_setup
camcorder_setup
bongo_setup

echo "
environment ready, now fire up Emacs!
"
