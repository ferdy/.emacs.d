#!/bin/bash

prerequisites() {
    echo "
configuring prerequisites..."
    sudo apt-get -y install --no-install-recommends make gcc automake autoconf
    sudo apt-get -y install --no-install-recommends g++ git
}

tls_setup() {
    echo "
configuring tls..."
    sudo apt-get -y install --no-install-recommends gnutls-bin
    sudo apt-get -y install --no-install-recommends ca-certificates
}

keychain_setup() {
    echo "
configuring keychain..."
    sudo apt-get -y install --no-install-recommends keychain
}

ag_setup() {
    echo "
configuring ag..."
    sudo apt-get -y install --no-install-recommends silversearcher-ag
}

scheme_setup() {
    echo "
configuring Scheme..."
    sudo apt-get -y install --no-install-recommends guile-2.0
    sudo apt-get -y install --no-install-recommends chicken-bin libchicken7 libchicken-dev
    chicken-install -s apropos chicken-doc input-parse numbers
    chicken-install -s sxml-transforms matchable scss filepath spiffy uri-common
    chicken-install -s doctype colorize multidoc defstruct atom svnwiki-sxml
    chicken-install -s rfc3339 hyde
    cd `csi -p '(chicken-home)'`
    curl http://3e8.org/pub/chicken-doc/chicken-doc-repo.tgz | sudo tar zx
    cd $HOME
}

commonlisp_setup() {
    echo "
configuring Common Lisp..."
    sudo apt-get -y install --no-install-recommends sbcl sbcl-doc
    sudo apt-get -y install --no-install-recommends cl-clx-sbcl cl-ppcre
    sudo apt-get -y install --no-install-recommends texinfo cl-swank
}

clojure_setup() {
    echo "
configuring Clojure..."
    sudo apt-get -y install --no-install-recommends openjdk-8-jre
    echo "
getting Lein..."
    if [ ! -d "$HOME/bin" ]; then
        mkdir -p $HOME/bin
        export PATH=$PATH:$HOME/bin
    fi
    wget https://raw.githubusercontent.com/technomancy/leiningen/stable/bin/lein -O $HOME/bin/lein
    chmod 755 $HOME/bin/lein
    lein
}

latex_setup() {
    echo "
configuring LaTeX..."
    cd ~/Downloads
    mv -f install-tl-unx.tar.gz /tmp
    wget http://mirror.ctan.org/systems/texlive/tlnet/install-tl-unx.tar.gz
    tar -xzf install-tl-unx.tar.gz
    cd `tar -tzf install-tl-unx.tar.gz | sed -e 'N;s/^\(.*\).*\n\1.*$/\1\n\1/;D'`
    sudo ./install-tl
    mkdir -p /opt
    sudo ln -s /usr/local/texlive/2015/bin/* /opt/texbin
    sudo apt-get install --no-install-recommends equivs
    mkdir -p /tmp/tl-equivs && cd /tmp/tl-equivs
    wget http://www.tug.org/texlive/files/debian-equivs-2015-ex.txt
    /bin/cp -f debian-equivs-2015-ex.txt texlive-local
    equivs-build texlive-local
    sudo dpkg -i texlive-local_2015-1_all.deb
    echo "
... done. Configuring chktex for Flycheck..."
    if [ ! -d "$HOME/sources" ]; then
        mkdir -p $HOME/sources
    fi
    cd $HOME/sources
    wget http://download.savannah.gnu.org/releases/chktex/chktex-1.7.2.tar.gz
    tar xzf chktex-1.7.2.tar.gz
    rm chktex-1.7.2.tar.gz
    cd chktex-1.7.2
    ./configure --enable-lacheck-replace && make
    sudo make install
    cp /usr/local/etc/chktexrc $HOME/.chktexrc
    cd $HOME
}

pandoc_setup() {
    echo "
configuring Pandoc..."
    wget https://github.com/jgm/pandoc/releases/download/1.16.0.2/pandoc-1.16.0.2-1-amd64.deb
    sudo dpkg -i pandoc-1.16.0.2-1-amd64.deb
    rm pandoc-1.16.0.2-1-amd64.deb
}

pdftools_setup() {
    echo "
configuring pdf-tools dependencies..."
    sudo apt-get -y install --no-install-recommends libpng-dev libz-dev
    sudo apt-get -y install --no-install-recommends libpoppler-glib-dev
    sudo apt-get -y install --no-install-recommends libpoppler-private-dev
    sudo apt-get -y install --no-install-recommends imagemagick
    cd $HOME
}

flyspell_setup() {
    echo "
configuring spell checker..."
    sudo apt-get -y install --no-install-recommends aspell aspell-en aspell-it
}

wordnet_setup() {
    echo "
configuring wordnet..."
    sudo apt-get -y install --no-install-recommends wordnet
}

langtool_setup() {
    echo "
configuring langtool..."
    if [ ! -x /usr/bin/unzip ]; then
        sudo apt-get -y install --no-install-recommends unzip
    fi
    cd $HOME
    wget https://languagetool.org/download/LanguageTool-3.2.zip
    unzip LanguageTool-3.2.zip
    mv LanguageTool-3.2 languagetool
    rm LanguageTool-3.2.zip
}

font_setup() {
    echo "
configuring fonts..."
    sudo apt-get -y install --no-install-recommends fonts-dejavu fonts-dejavu-extra
    sudo apt-get -y install --no-install-recommends ttf-ancient-fonts
}

cask_setup() {
    echo "
configuring cask dependencies..."
    sudo apt-get -y install --no-install-recommends python2.7
    echo "
configuring cask"
    curl -fsSL https://raw.githubusercontent.com/cask/cask/master/go | python
}

echo "
##########################################
# esetup                                 #
# Script for creating the right          #
# environment for my Emacs configuration #
##########################################"

sudo -v # gets user password for next sudos

cd $HOME
prerequisites
tls_setup
keychain_setup
ag_setup
clojure_setup
scheme_setup
commonlisp_setup
latex_setup
pandoc_setup
pdftools_setup
flyspell_setup
wordnet_setup
langtool_setup
font_setup
cask_setup

echo "
environment ready, now fire up Emacs!
"
